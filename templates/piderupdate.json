<?php
ini_set("memory_limit", "1024M");
require dirname(__FILE__).'/../phpspider/core/init.php';
require dirname(__FILE__).'/../util/http.php';
require dirname(__FILE__).'/../ext/db_ext.php';
require dirname(__FILE__).'/../util/api.php';
require dirname(__FILE__).'/../model/product.php';

use util\http;
use util\api;
use ext\db_ext;
use model\product;

db_ext::switch_db("jhbian_spider");
//天猫标准库的更新程序
$GLOBALS['website']['id'] = 13;
$GLOBALS['nohit_urls'] = array();
$GLOBALS['timeout'] = 30;


//处理之前处理失败的URL
function process_again() {
    //如果没有处理失败的URL，则跳过
    if (count($GLOBALS['nohit_urls']) < 0) {
        return false;
    }
    //将超时延长30秒, 当超时超过三分钟，就不抓了
    if ($GLOBALS['timeout'] < 180) {
        $GLOBALS['timeout'] = $GLOBALS['timeout'] + 30;
    } else {
        return false;
    }
    $nohit_urls  = $GLOBALS['nohit_urls'];
    $GLOBALS['nohit_urls'] =  array();
    update_htmls($nohit_urls);
}
//判断产品链接是否要更新
function if_update($current_header,$last_header) {
    $force_refresh_limit = 259200; //三天更新一次
    //依次判断http头, last-modified > etag > content-length
    if (!empty($current_header['modify_date']) && !empty($last_header['modify_date'])) {
        return  strtotime($current_header['modify_date']) > strtotime($last_header['modify_date']) ? true: false;
    }

    if (!empty($current_header['etag']) && !empty($last_header['etag'])) {
        return $current_header['modify_date'] != $last_header['modify_date'] ? true: false;
    }

    if (!empty($current_header['content_length']) && !empty($last_header['content_length'])) {
        return  $current_header['content_length'] != $last_header['content_length'] ? true: false;
    }

    if (!empty($last_header['date'])) {
        return time()- strtotime($last_header['date']) > $force_refresh_limit ? true: false;
    }
    return false;
}


function update_htmls($products) {
    $update_nums = count($products);
    $updated_nums = 0;
    foreach ($products as $product) {
        $url = $product;
        $product_id = 0;
        //从url中解析product_id
        $url = preg_replace("/https?:\/\/detail\.m\.tmall\.com\/item\.htm\?.*id=(\d+).*/i","http://detail.m.tmall.com/item.htm?id=\\1",$url);
        $url = preg_replace("/https?:\/\/detail\.tmall\.com\/item\.htm\?.*id=(\d+).*/i","http://detail.tmall.com/item.htm?id=\\1",$url);
        preg_match("/https?:\/\/detail\.tmall\.com\/item\.htm\?id=(\d+)/i",$url,$matches);

        if (isset($matches[1]) && !empty($matches[1]) ) {
            $product_id = $matches[1];
        } else {
            echo "Error parse the product id from url link $url!";
            exit(0);
        }
        $product = new product($product_id, $GLOBALS['website']['id']);
        $current_header = http::get_http_header($url,'GET');
        $uid = $product->get_uid();
        $last_header = product::get_last_header($uid);
        if (product::get_runtime_status($uid) === 1) {
            $updated_nums++;
            echo "已经更新: ".round($updated_nums/$update_nums*100,2)."%\n";
            continue;
        }

        if(if_update($current_header,$last_header) ) {
            //更新
            requests::$input_encoding = "UTF-8";
            requests::$output_encoding = "UTF-8";
            requests::set_timeout($GLOBALS['timeout']);
            $url_content = requests::get($url);

            if (empty($url_content)) {
                //将未获取的url,存起来以后抓
                $GLOBALS['nohit_urls'][]= $url;
                log::error("Error occurred when get ${url}'s html content!");
                printf("%s", "Error occurred when get ${url}'s html content!");
                continue;
            }
            //整理更新的信息
            $html_data['html'] = mysql_escape_string($url_content);
            //整理更新的http头信息
            $html_data['http_code'] = $current_header['http_code'];
            $html_data['modify_date'] = $current_header['last_modified'];
            $html_data['content_length'] = $current_header['content_length'];
            $html_data['etag'] = $current_header['etag'];
            $html_data['runtime'] = date("Y-m-d h:i:s");
            $html_data['flag'] = 1;
        } else {
            //不更新
            $html_data['runtime'] = date("Y-m-d h:i:s");
            $html_data['flag']  = 1;
        }
        $uresult = db::update("all_html",$html_data, array("uid='$uid'"));
        if ($uresult === false ) {
            log::error("Error occurred when update $url's html data'");
            continue;
        }

        $updated_nums++;
        echo "已经更新: ".round($updated_nums/$update_nums*100,2)."%\n";

    }
    process_again();
}

function update_tianmao(){
    $products = api::get_standard_products_url("1000","tmall.com");
    update_htmls($products);
    //恢复数据库的flag字段,方便下次依据这个字段来判断，一次更新中哪些已经更新，避免意外中断,反复更新
    $flag_data = array(
        "flag"=>0,
    );
    $update_flag = db::update("all_html",$flag_data,array("website_id='".$GLOBALS['website']['id']."'"));
    if ($update_flag === false ) {
        log::error("Error occurred when restore flag");
    }
}

update_tianmao();